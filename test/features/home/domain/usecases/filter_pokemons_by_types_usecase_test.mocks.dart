// Mocks generated by Mockito 5.4.6 from annotations
// in poke_app/test/features/home/domain/usecases/filter_pokemons_by_types_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:poke_app/features/home/data/models/all_pokemons_response.dart'
    as _i2;
import 'package:poke_app/features/home/data/models/all_types_response.dart'
    as _i4;
import 'package:poke_app/features/home/data/models/pokemon_detail_response.dart'
    as _i3;
import 'package:poke_app/features/home/data/models/pokemons_by_type_response.dart'
    as _i5;
import 'package:poke_app/features/home/data/repositories/home_repository_impl.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAllPokemonsResponse_0 extends _i1.SmartFake
    implements _i2.AllPokemonsResponse {
  _FakeAllPokemonsResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePokemonDetailResponse_1 extends _i1.SmartFake
    implements _i3.PokemonDetailResponse {
  _FakePokemonDetailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAllTypesResponse_2 extends _i1.SmartFake
    implements _i4.AllTypesResponse {
  _FakeAllTypesResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePokemonsByTypeResponse_3 extends _i1.SmartFake
    implements _i5.PokemonsByTypeResponse {
  _FakePokemonsByTypeResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [HomeRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepositoryImpl extends _i1.Mock
    implements _i6.HomeRepositoryImpl {
  MockHomeRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.AllPokemonsResponse> getAllPokemons({
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAllPokemons, [], {
              #queryParameters: queryParameters,
            }),
            returnValue: _i7.Future<_i2.AllPokemonsResponse>.value(
              _FakeAllPokemonsResponse_0(
                this,
                Invocation.method(#getAllPokemons, [], {
                  #queryParameters: queryParameters,
                }),
              ),
            ),
          )
          as _i7.Future<_i2.AllPokemonsResponse>);

  @override
  _i7.Future<_i3.PokemonDetailResponse> getPokemonDetail(String? nameOrId) =>
      (super.noSuchMethod(
            Invocation.method(#getPokemonDetail, [nameOrId]),
            returnValue: _i7.Future<_i3.PokemonDetailResponse>.value(
              _FakePokemonDetailResponse_1(
                this,
                Invocation.method(#getPokemonDetail, [nameOrId]),
              ),
            ),
          )
          as _i7.Future<_i3.PokemonDetailResponse>);

  @override
  _i7.Future<_i4.AllTypesResponse> getAllTypes() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTypes, []),
            returnValue: _i7.Future<_i4.AllTypesResponse>.value(
              _FakeAllTypesResponse_2(
                this,
                Invocation.method(#getAllTypes, []),
              ),
            ),
          )
          as _i7.Future<_i4.AllTypesResponse>);

  @override
  _i7.Future<_i5.PokemonsByTypeResponse> getPokemonsByType(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#getPokemonsByType, [name]),
            returnValue: _i7.Future<_i5.PokemonsByTypeResponse>.value(
              _FakePokemonsByTypeResponse_3(
                this,
                Invocation.method(#getPokemonsByType, [name]),
              ),
            ),
          )
          as _i7.Future<_i5.PokemonsByTypeResponse>);
}
