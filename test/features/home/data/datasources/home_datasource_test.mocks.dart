// Mocks generated by Mockito 5.4.6 from annotations
// in poke_app/test/features/home/data/datasources/home_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:poke_app/core/network/dio_client.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_1<T1> extends _i1.SmartFake implements _i3.Future<T1> {
  _FakeFuture_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i4.DioClient {
  MockDioClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get instance =>
      (super.noSuchMethod(
            Invocation.getter(#instance),
            returnValue: _FakeDio_0(this, Invocation.getter(#instance)),
          )
          as _i2.Dio);

  @override
  void setHeaders(Map<String, dynamic>? headers) => super.noSuchMethod(
    Invocation.method(#setHeaders, [headers]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<T> get<T>(
    String? path, {
    Map<String, dynamic>? queryParameters,
    required T Function(dynamic)? fromJson,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {
                #queryParameters: queryParameters,
                #fromJson: fromJson,
                #options: options,
              },
            ),
            returnValue:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #get,
                      [path],
                      {
                        #queryParameters: queryParameters,
                        #fromJson: fromJson,
                        #options: options,
                      },
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #get,
                    [path],
                    {
                      #queryParameters: queryParameters,
                      #fromJson: fromJson,
                      #options: options,
                    },
                  ),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<T> post<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    required T Function(dynamic)? fromJson,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #fromJson: fromJson,
                #options: options,
              },
            ),
            returnValue:
                _i5.ifNotNull(
                  _i5.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #post,
                      [path],
                      {
                        #data: data,
                        #queryParameters: queryParameters,
                        #fromJson: fromJson,
                        #options: options,
                      },
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #post,
                    [path],
                    {
                      #data: data,
                      #queryParameters: queryParameters,
                      #fromJson: fromJson,
                      #options: options,
                    },
                  ),
                ),
          )
          as _i3.Future<T>);
}
